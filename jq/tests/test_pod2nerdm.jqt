# Tests for the pod2nerdm library
#
# To run, execute:
#
#  jq --run-tests test_pod2nerdm.jqt
#

#--------------
# testing nerdm_schema()
#
include "pod2nerdm"; nerdm_schema
null
"https://www.nist.gov/od/dm/nerdm-schema/v0.1#"

#--------------
# testing nerdm_schema()
#
include "pod2nerdm"; nerdm_pub_schema
null
"https://www.nist.gov/od/dm/nerdm-schema/pub/v0.1#"

#--------------
# testing nerdm_context()
#
include "pod2nerdm"; nerdm_context
null
"https://www.nist.gov/od/dm/nerdm-pub-context.jsonld"

#--------------
# testing dciteRefType()
#
include "pod2nerdm"; dciteRefType
null
"https://www.nist.gov/od/dm/nerdm-schema/v0.1#/definitions/DCiteDocumentReference"

#--------------
# testing resid()
#
# Note that in subsequent tests, we need to override the definition of resid
# because --arg does not work with --run-tests and variables are lexically
# scoped.  
#
include "pod2nerdm"; def resid: "ID"; resid
null
"ID"

#--------------
# testing cvtref()
#
include "pod2nerdm"; map(cvtref)
[ "http://goob.net/doc1.txt", "https://goob.gov/doc2.txt" ]
[{ "@type": "deo:BibliographicReference","@id":"#ref:doc1.txt", "refType": "IsReferencedBy", "_extensionSchemas": [ "https://www.nist.gov/od/dm/nerdm-schema/v0.1#/definitions/DCiteDocumentReference" ], "location": "http://goob.net/doc1.txt"}, { "@type": "deo:BibliographicReference","@id":"#ref:doc2.txt", "refType": "IsReferencedBy", "_extensionSchemas": [ "https://www.nist.gov/od/dm/nerdm-schema/v0.1#/definitions/DCiteDocumentReference" ], "location": "https://goob.gov/doc2.txt"}]

#---------------
# testing urlpath()
#
include "pod2nerdm"; map(urlpath)
[ "http://goob.net/doc1.txt", "https://goob.gov/gurn/doc2.txt", "file:/blah/blah", "http://dx.doi.org/10.082093/DOSFIASD", "https://www.nist.gov/od/ds/3A1EE2F169DD3B8CE0531A570681DB5D1491/trial3/trial3a.json" ]
[ "/doc1.txt", "/gurn/doc2.txt", "/blah/blah", "/10.082093/DOSFIASD", "/od/ds/3A1EE2F169DD3B8CE0531A570681DB5D1491/trial3/trial3a.json" ]

#---------------
# testing componentID()
#
include "pod2nerdm"; map(componentID("#"))
[ {"filepath": "b/doc1.txt", "accessURL": "http://goob.net/doc1.txt"}, {"accessURL": "https://goob.gov/gurn/doc2.txt", "downloadURL": "file:/blah/blah"}, {"downloadURL": "http://dx.doi.org/10.082093/DOSFIASD"} ]
[ "#b/doc1.txt", "#gurn/doc2.txt", "#10.082093/DOSFIASD" ]


#--------------
# testing dist2download()
#
include "pod2nerdm"; dist2download
{"describedBy": "http://www.nist.gov/srd/srd_data/srd13_janaf-data-defs.json", "downloadURL": "http://www.nist.gov/srd/srd_data/srd13_B-101.json", "mediaType": "application/json","title": "Titanium Boride" }
{"describedBy": "http://www.nist.gov/srd/srd_data/srd13_janaf-data-defs.json", "downloadURL": "http://www.nist.gov/srd/srd_data/srd13_B-101.json","mediaType": "application/json", "title": "Titanium Boride", "filepath":"srd13_B-101.json", "@type": ["nrdp:DataFile","dcat:Distribution"],"@id":"cmps/srd13_B-101.json","_extensionSchemas": ["https://www.nist.gov/od/dm/nerdm-schema/pub/v0.1#/definitions/DataFile"]}

#--------------
# testing dist2hidden()
#
include "pod2nerdm"; dist2hidden
{"accessURL": "https://doi.org/10.18434/T42C7D","title": "A Library to Enable the Modeling of Optical Imaging of Finite Multi-Line Arrays"}
{"accessURL": "https://doi.org/10.18434/T42C7D","title": "A Library to Enable the Modeling of Optical Imaging of Finite Multi-Line Arrays","@type": [ "nrd:Hidden", "dcat:Distribution" ],"@id":"#doi:10.18434/T42C7D"}

#--------------
# testing dist2inaccess()
#
include "pod2nerdm"; dist2inaccess
{"accessURL": "https://doi.org/10.18434/T42C7D","title": "A Library to Enable the Modeling of Optical Imaging of Finite Multi-Line Arrays"}
{"accessURL": "https://doi.org/10.18434/T42C7D","title": "A Library to Enable the Modeling of Optical Imaging of Finite Multi-Line Arrays","@type": [ "nrd:Inaccessible", "dcat:Distribution" ]}

#--------------
# testing dist2inaccess()
#
include "pod2nerdm"; dist2accesspage
{"accessURL": "https://doi.org/10.18434/T42C7D","title": "A Library to Enable the Modeling of Optical Imaging of Finite Multi-Line Arrays"}
{"accessURL": "https://doi.org/10.18434/T42C7D","title": "A Library to Enable the Modeling of Optical Imaging of Finite Multi-Line Arrays","@type": [ "nrdp:AccessPage", "dcat:Distribution" ],"@id":"#10.18434/T42C7D","_extensionSchemas":["https://www.nist.gov/od/dm/nerdm-schema/pub/v0.1#/definitions/AccessPage"]}

#--------------
# testing dist2comp()
#
# In this test, we detect and output a Hidden component (containing a DOI).
#
include "pod2nerdm"; dist2comp
{"accessURL": "https://doi.org/10.18434/T42C7D","title": "A Library to Enable the Modeling of Optical Imaging of Finite Multi-Line Arrays"}
{"accessURL": "https://doi.org/10.18434/T42C7D","title": "A Library to Enable the Modeling of Optical Imaging of Finite Multi-Line Arrays","@type": [ "nrd:Hidden", "dcat:Distribution" ],"@id":"#doi:10.18434/T42C7D"}

#--------------
# testing dist2comp()
#
# In this test, we detect and output a DataFile component (containing a
# downloadURL).
#
include "pod2nerdm"; dist2comp
{"describedBy": "http://www.nist.gov/srd/srd_data/srd13_janaf-data-defs.json", "downloadURL": "http://www.nist.gov/srd/srd_data/srd13_B-101.json", "mediaType": "application/json","title": "Titanium Boride" }
{"describedBy": "http://www.nist.gov/srd/srd_data/srd13_janaf-data-defs.json", "downloadURL": "http://www.nist.gov/srd/srd_data/srd13_B-101.json","mediaType": "application/json", "title": "Titanium Boride", "filepath":"srd13_B-101.json", "@type": ["nrdp:DataFile","dcat:Distribution"],"@id":"cmps/srd13_B-101.json","_extensionSchemas": ["https://www.nist.gov/od/dm/nerdm-schema/pub/v0.1#/definitions/DataFile"]}

#--------------
# testing dist2comp()
#
# In this test, we detect and output a DataFile component (containing a
# downloadURL and an accessURL).
#
include "pod2nerdm"; dist2comp
{"accessURL": "http://www.nsrl.nist.gov/Downloads.htm","conformsTo": "http://www.nsrl.nist.gov/Documents/Data-Formats-of-the-NSRL-Reference-Data-Set-16.pdf","downloadURL": "http://www.nsrl.nist.gov/RDS/rds_2.50/RDS_250.iso","format": "ISO 9660 disk image","mediaType": "application/zip" }
{"accessURL": "http://www.nsrl.nist.gov/Downloads.htm","conformsTo": "http://www.nsrl.nist.gov/Documents/Data-Formats-of-the-NSRL-Reference-Data-Set-16.pdf","downloadURL": "http://www.nsrl.nist.gov/RDS/rds_2.50/RDS_250.iso","format": { "description": "ISO 9660 disk image"},"mediaType": "application/zip", "filepath":"RDS_250.iso", "@type": ["nrdp:DataFile","dcat:Distribution"],"@id":"cmps/RDS_250.iso","_extensionSchemas": ["https://www.nist.gov/od/dm/nerdm-schema/pub/v0.1#/definitions/DataFile"] }

#--------------
# testing dist2comp()
#
# In this test, we detect and output an AccessPage component (containing a
# accessURL).
#
include "pod2nerdm"; dist2comp
{"accessURL": "http://webbook.nist.gov/chemistry/","description": "Landing page for the NIST Chemistry WebBook.","mediaType": "text/html"}
{ "accessURL": "http://webbook.nist.gov/chemistry/","description": "Landing page for the NIST Chemistry WebBook.","mediaType": "text/html","@type": ["nrdp:AccessPage","dcat:Distribution"],"@id":"#chemistry/","_extensionSchemas":["https://www.nist.gov/od/dm/nerdm-schema/pub/v0.1#/definitions/AccessPage"]}

# testing dist2comp()
#
# In this test, we detect and output an Inaccessible component (containing a
# neither a downloadURL nor an accessURL).
#
include "pod2nerdm"; dist2comp
{"description": "Landing page for the NIST Chemistry WebBook.","mediaType": "text/html"}
{ "description": "Landing page for the NIST Chemistry WebBook.","mediaType": "text/html","@type": ["nrd:Inaccessible","dcat:Distribution"]}

# testing doiFromDist()
#
# This successfully detects and extracts the DOI
#
include "pod2nerdm"; doiFromDist
[{"accessURL": "https://doi.org/10.18434/T42C7D","title": "A Library to Enable the Modeling of Optical Imaging of Finite Multi-Line Arrays"}]
"doi:10.18434/T42C7D"

# testing doiFromDist()
#
# This successfully does not find a DOI and returns null
#
include "pod2nerdm"; doiFromDist
[{"accessURL": "http://webbook.nist.gov/chemistry/","title": "A Library to Enable the Modeling of Optical Imaging of Finite Multi-Line Arrays"}]
null

# testing doiFromDist()
#
# This successfully detects and extracts the DOI (from multiple Distributions).
# We expect it to take the first DOI it finds (when there is more than one).
#
include "pod2nerdm"; doiFromDist
[{"accessURL": "https://doi.org/10.18434/T42C7D","title": "A Library to Enable the Modeling of Optical Imaging of Finite Multi-Line Arrays"},{"accessURL": "http://webbook.nist.gov/chemistry/","title": "A Library to Enable the Modeling of Optical Imaging of Finite Multi-Line Arrays"},{"accessURL": "https://doi.org/10.18434/Z42C80","title": "A Library to Enable the Modeling of Optical Imaging of Finite Multi-Line Arrays"}]
"doi:10.18434/T42C7D"

# testing obj_types()
#
# This successfully tests extracting a unique list of object types
# available from an array of objects, some having multiple @types
#
include "pod2nerdm"; obj_types
[{ "@type": [ "pod:Distribution", "nrdmp:DataFile" ] }, { "@type": [ "nrdmp:DataFile", "pod:Distribution" ]}, { "@type": [ "nrdmp:Subcollection", "pod:Distribution", "nrdt:Goober" ]} ]
[ "nrdmp:DataFile", "nrdmp:Subcollection", "nrdt:Goober", "pod:Distribution" ]

# testing obj_types()
#
# This successfully tests extracting a unique list of object types
# available from an array of objects; this tests success when an object has
# a scalar @type value.
#
include "pod2nerdm"; obj_types
[{ "@type": [ "pod:Distribution", "nrdmp:DataFile" ] }, { "@type": [ "nrdmp:DataFile", "pod:Distribution" ]}, { "@type": "nrdmp:Subcollection" } ]
[ "nrdmp:DataFile", "nrdmp:Subcollection", "pod:Distribution" ]

# testing select_comp_within
#
# This successfully tests selecting components with a filepath indicating a
# file below a particular subcollection
#
include "pod2nerdm"; select_comp_within("foo/bar")
[{ "title": "Titanium Boride", "filepath": "foo/srd13_B-101.json","@type": ["nrdp:DataFile","dcat:Distribution"]},{ "title": "foo", "filepath": "foo", "@type": [ "nrdp:Subcollection"]},{"title": "Titanium Boride","filepath": "foo/bar/srd13_B-101.json","@type": ["nrdp:DataFile","dcat:Distribution"]},{"title": "foo bar","filepath": "foo/bar","@type": ["nrdp:Subcollection"]},{ "title": "foo bar goo", "filepath": "foo/bar/goo", "@type": ["nrdp:Subcollection"]}]
[{"title": "Titanium Boride","filepath": "foo/bar/srd13_B-101.json","@type": ["nrdp:DataFile","dcat:Distribution"]},{ "title": "foo bar goo", "filepath": "foo/bar/goo", "@type": ["nrdp:Subcollection"]}]

# testing select_obj_type
#
# This successfully tests selecting a component from throughout the hierarchy
#
include "pod2nerdm"; select_obj_type("dcat:Distribution")
[{ "title": "Titanium Boride", "filepath": "foo/srd13_B-101.json","@type": ["nrdp:DataFile","dcat:Distribution"]},{ "title": "foo", "filepath": "foo", "@type": [ "nrdp:Subcollection"]},{"title": "Titanium Boride","filepath": "foo/bar/srd13_B-101.json","@type": ["nrdp:DataFile","dcat:Distribution"]},{"title": "foo bar","filepath": "foo/bar","@type": ["nrdp:Subcollection"]},{ "title": "foo bar goo", "filepath": "foo/bar/goo", "@type": ["nrdp:Subcollection"]}]
[{ "title": "Titanium Boride", "filepath": "foo/srd13_B-101.json","@type": ["nrdp:DataFile","dcat:Distribution"]},{"title": "Titanium Boride","filepath": "foo/bar/srd13_B-101.json","@type": ["nrdp:DataFile","dcat:Distribution"]}]

# testing select_obj_type
#
# This successfully tests selecting specifically Subcollections throughout the
# hierarchy.
#
include "pod2nerdm"; select_obj_type("nrdp:Subcollection")
[{ "title": "Titanium Boride", "filepath": "foo/srd13_B-101.json","@type": ["nrdp:DataFile","dcat:Distribution"]},{ "title": "foo", "filepath": "foo", "@type": [ "nrdp:Subcollection"]},{"title": "Titanium Boride","filepath": "foo/bar/srd13_B-101.json","@type": ["nrdp:DataFile","dcat:Distribution"]},{"title": "foo bar","filepath": "foo/bar","@type": ["nrdp:Subcollection"]},{ "title": "foo bar goo", "filepath": "foo/bar/goo", "@type": ["nrdp:Subcollection"]}]
[{ "title": "foo", "filepath": "foo", "@type": [ "nrdp:Subcollection"]},{"title": "foo bar","filepath": "foo/bar","@type": ["nrdp:Subcollection"]},{ "title": "foo bar goo", "filepath": "foo/bar/goo", "@type": ["nrdp:Subcollection"]}]

# testing select_obj_type
#
# This tests that an empty array is returned when selecting a non-existent 
# type.
#
include "pod2nerdm"; select_obj_type("gurn:Goober")
[{ "title": "Titanium Boride", "filepath": "foo/srd13_B-101.json","@type": ["nrdp:DataFile","dcat:Distribution"]},{ "title": "foo", "filepath": "foo", "@type": [ "nrdp:Subcollection"]},{"title": "Titanium Boride","filepath": "foo/bar/srd13_B-101.json","@type": ["nrdp:DataFile","dcat:Distribution"]},{"title": "foo bar","filepath": "foo/bar","@type": ["nrdp:Subcollection"]},{ "title": "foo bar goo", "filepath": "foo/bar/goo", "@type": ["nrdp:Subcollection"]}]
[]

# testing select_comp_type
#
# This tests selecting a type below a specific subcollection in the hierarchy.
#
include "pod2nerdm"; select_comp_type("nrdp:Subcollection"; "foo/bar")
[{ "title": "Titanium Boride", "filepath": "foo/srd13_B-101.json","@type": ["nrdp:DataFile","dcat:Distribution"]},{ "title": "foo", "filepath": "foo", "@type": [ "nrdp:Subcollection"]},{"title": "Titanium Boride","filepath": "foo/bar/srd13_B-101.json","@type": ["nrdp:DataFile","dcat:Distribution"]},{"title": "foo bar","filepath": "foo/bar","@type": ["nrdp:Subcollection"]},{ "title": "foo bar goo", "filepath": "foo/bar/goo", "@type": ["nrdp:Subcollection"]}]
[{ "title": "foo bar goo", "filepath": "foo/bar/goo", "@type": ["nrdp:Subcollection"]}]

# testing select_comp_children
#
# This tests selecting children of a particular subcollection
#
include "pod2nerdm"; select_comp_children("foo")
[{ "title": "Titanium Boride", "filepath": "foo/srd13_B-101.json","@type": ["nrdp:DataFile","dcat:Distribution"]},{ "title": "foo", "filepath": "foo", "@type": [ "nrdp:Subcollection"]},{"title": "Titanium Boride","filepath": "foo/bar/srd13_B-101.json","@type": ["nrdp:DataFile","dcat:Distribution"]},{"title": "foo bar","filepath": "foo/bar","@type": ["nrdp:Subcollection"]},{ "title": "foo bar goo", "filepath": "foo/bar/goo", "@type": ["nrdp:Subcollection"]}]
[{ "title": "Titanium Boride", "filepath": "foo/srd13_B-101.json","@type": ["nrdp:DataFile","dcat:Distribution"]},{"title": "foo bar","filepath": "foo/bar","@type": ["nrdp:Subcollection"]}]

# testing select_comp_children
#
# This tests selecting children of the root collection
#
include "pod2nerdm"; select_comp_children("")
[{ "title": "Titanium Boride", "filepath": "foo/srd13_B-101.json","@type": ["nrdp:DataFile","dcat:Distribution"]},{ "title": "foo", "filepath": "foo", "@type": [ "nrdp:Subcollection"]},{"title": "Titanium Boride","filepath": "foo/bar/srd13_B-101.json","@type": ["nrdp:DataFile","dcat:Distribution"]},{"title": "foo bar","filepath": "foo/bar","@type": ["nrdp:Subcollection"]},{ "title": "foo bar goo", "filepath": "foo/bar/goo", "@type": ["nrdp:Subcollection"]}]
[{ "title": "foo", "filepath": "foo", "@type": [ "nrdp:Subcollection"]}]

# testing select_comp_children
#
# This tests that a leaf in the hierarchy has no children
#
include "pod2nerdm"; select_comp_children("foo/srd13_B-101.json")
[{ "title": "Titanium Boride", "filepath": "foo/srd13_B-101.json","@type": ["nrdp:DataFile","dcat:Distribution"]},{ "title": "foo", "filepath": "foo", "@type": [ "nrdp:Subcollection"]},{"title": "Titanium Boride","filepath": "foo/bar/srd13_B-101.json","@type": ["nrdp:DataFile","dcat:Distribution"]},{"title": "foo bar","filepath": "foo/bar","@type": ["nrdp:Subcollection"]},{ "title": "foo bar goo", "filepath": "foo/bar/goo", "@type": ["nrdp:Subcollection"]}]
[]

# testing inventory_by_type
#
include "pod2nerdm"; inventory_by_type
[{ "@type": [ "pod:Distribution", "nrdmp:DataFile" ], "filepath": "zub.txt" }, { "@type": [ "nrdmp:DataFile", "pod:Distribution" ], "filepath": "pub.txt"}, { "@type": [ "nrdmp:Subcollection", "pod:Distribution", "nrdt:Goober" ], "filepath": "glub.txt"}, { "@type": [ "nrdt:Goober" ] } ]
[{ "forType": "nrdmp:DataFile", "childCount": 2, "descCount": 2 },{ "forType": "nrdmp:Subcollection", "childCount": 1, "descCount": 1 },{ "forType": "nrdt:Goober", "childCount": 2, "descCount": 2 },{ "forType": "pod:Distribution", "childCount": 3, "descCount": 3 }]

# testing summarize_components
#
include "pod2nerdm"; .inventory = (.components | inventory_components)
{ "components": [{ "title": "Titanium Boride", "filepath": "foo/srd13_B-101.json","@type": ["nrdp:DataFile","dcat:Distribution"]},{ "title": "foo", "filepath": "foo", "@type": [ "nrdp:Subcollection"]},{"title": "Titanium Boride","filepath": "foo/bar/srd13_B-101.json","@type": ["nrdp:DataFile","dcat:Distribution"]},{"title": "foo bar","filepath": "foo/bar","@type": ["nrdp:Subcollection"]},{ "title": "foo bar goo", "filepath": "foo/bar/goo", "@type": ["nrdp:Subcollection"]}] }
{"components":[{"title":"Titanium Boride","filepath":"foo/srd13_B-101.json","@type":["nrdp:DataFile","dcat:Distribution"]},{"title":"foo","filepath":"foo","@type":["nrdp:Subcollection"]},{"title":"Titanium Boride","filepath":"foo/bar/srd13_B-101.json","@type":["nrdp:DataFile","dcat:Distribution"]},{"title":"foo bar","filepath":"foo/bar","@type":["nrdp:Subcollection"]},{"title":"foo bar goo","filepath":"foo/bar/goo","@type":["nrdp:Subcollection"]}],"inventory": [ {"forCollection":"","childCount":1,"descCount":5,"byType":[{"forType":"dcat:Distribution","childCount":0,"descCount":2},{"forType":"nrdp:DataFile","childCount":0,"descCount":2},{"forType":"nrdp:Subcollection","childCount":1,"descCount":3}],"childCollections":["foo"]}, {"forCollection":"foo","childCount":2,"descCount":4,"byType":[{"forType":"dcat:Distribution","childCount":1,"descCount":2},{"forType":"nrdp:DataFile","childCount":1,"descCount":2},{"forType":"nrdp:Subcollection","childCount":1,"descCount":2}],"childCollections":["foo/bar"]}, {"forCollection":"foo/bar","childCount":2,"descCount":2,"byType":[{"forType":"dcat:Distribution","childCount":1,"descCount":1},{"forType":"nrdp:DataFile","childCount":1,"descCount":1},{"forType":"nrdp:Subcollection","childCount":1,"descCount":1}],"childCollections":["foo/bar/goo"]}, {"forCollection":"foo/bar/goo","childCount":0,"descCount":0,"byType":[],"childCollections":[]}]}

# hierarchy -- flat top level collection
include "pod2nerdm"; hierarchy("")
[ {"filepath": "A", "@type": [ "DataFile" ], "downloadURL": "/dev/null"}, {"filepath": "B" } ]
[ {"filepath": "A", "downloadURL": "/dev/null" },{ "filepath": "B" }]

# hierarchy -- 2 levels
include "pod2nerdm"; hierarchy("")
[ {"filepath": "A", "@type": [ "DataFile" ], "downloadURL": "/dev/null"}, {"filepath": "B", "@type": [ "Subcollection" ] } ]
[ {"filepath": "A", "downloadURL": "/dev/null" },{ "filepath": "B", "children": [] }]

# hierarchy -- 3 levels
include "pod2nerdm"; hierarchy("")
[ {"filepath": "A", "@type": [ "DataFile" ], "downloadURL": "/dev/null"}, {"filepath": "B", "@type": [ "Subcollection" ] }, { "filepath": "B/C", "@type": ["Fool"] } ]
[ {"filepath": "A", "downloadURL": "/dev/null" },{ "filepath": "B", "children": [ { "filepath": "B/C" }] }]

# hierarchy -- 3 levels with non-data component
include "pod2nerdm"; hierarchy("")
[ {"filepath": "A", "@type": [ "DataFile" ], "downloadURL": "/dev/null"}, {"@type": [ "AccessPage" ]}, {"filepath": "B", "@type": [ "Subcollection" ] }, { "filepath": "B/C", "@type": ["Fool"] } ]
[ {"filepath": "A", "downloadURL": "/dev/null" },{ "filepath": "B", "children": [ { "filepath": "B/C" }] }]

include "pod2nerdm"; hierarchy("")
[ {"filepath": "A", "@type": [ "DataFile" ], "downloadURL": "/dev/null"}, {"filepath": "B", "@type": [ "Subcollection" ] }, { "filepath": "B/C", "@type": ["Fool"] },  {"filepath": "B/D", "@type": [ "Subcollection" ] }, {"filepath": "B/D/A", "@type": [ "DataFile" ], "downloadURL": "/dev/null"}]
[ {"filepath": "A", "downloadURL": "/dev/null" },{ "filepath": "B", "children": [ { "filepath": "B/C" }, {"filepath": "B/D", "children": [ {"filepath": "B/D/A", "downloadURL": "/dev/null" }]}]}]


# testing podds2resoure:
#
# this will be handled by test_podds2resource.py
#

# testing podds2resoure:
#
# this will be handled by test_podcat2resources.py
#

